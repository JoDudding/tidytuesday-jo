---
title: "#TidyTuesday 2025-05-20: Water Quality at Sydney Beaches"
format: html
image: ../images/tt-2025-05-20-precipitation-days.png
---

# Background

This week we're exploring the water quality of Sydney's iconic beaches. The data is available at the New South Wales State Government [Beachwatch website](https://www.beachwatch.nsw.gov.au/waterMonitoring/waterQualityData).

> Beachwatch and our partners monitor water quality at swim sites to ensure that recreational water environments are managed as safely as possible so that as many people as possible can benefit from using the water.

[Sydney beaches were in the news](https://www.abc.net.au/news/2025-01-10/pollution-risks-in-sydney-beaches-contaminated-waterways-rain/104790856.) this summer with high rainfall causing concerns about the safety of the water.

The dataset this week includes both water quality and [historical weather data](https://open-meteo.com/) from 1991 until 2025.

- Has the water quality declined over this period?
- How does rainfall impact E-coli bacteria levels?
- Are some swimming sites particularly prone to high bacteria levels following rain?

```{r}
#| label: setup
#| file: scripts/_setup.r

```

# Load the weekly data and check the [readme](https://github.com/rfordatascience/tidytuesday/tree/main/data/2025/2025-05-20)

```{r}
#| label: load-data
#| include: false

if(file.exists("data/tt_2025-05-20.rds")) {
  tt <- readRDS("data/tt_2025-05-20.rds")
} else {

  tt <- tt_load("2025-05-20")
  saveRDS(tt, "data/tt_2025-05-20.rds")
}

map(tt, glimpse)

```



# Analyse

## Weather trends

```{r}
#| label: fig-cum-rainfall
#| fig-cap: Cumulative rainfall for Sydney

cum_annual_rainfall <- tt$weather |> 
  group_by(year = year(date)) |> 
  arrange(date) |> 
  mutate(
    cum_precip = cumsum(precipitation_mm),
    month = month(date, label = TRUE)
  ) |> 
  # remove the leap days
  filter(! (month(date) == 2 & day(date) == 29)) |> 
  mutate(
    day = row_number(),
    max_year= last(cum_precip)
  ) |> 
  ungroup() |> 
  mutate(
    year_groups = case_when(
      year == max(year) ~ as.character(year),
      max_year == max(max_year) ~ as.character(year),
      TRUE ~ "Rest"
    )
  )

quartiles <- cum_annual_rainfall |> 
  group_by(day) |> 
  summarise(
    "1" = quantile(cum_precip, 0.25),
    "2" = quantile(cum_precip, 0.50),
    "3" = quantile(cum_precip, 0.75)
  ) |> 
  gather(-day, key = year, value = cum_precip) |> 
  mutate(
    year = as.integer(year),
    year_groups = "Quartiles"
  )

cum_annual_rainfall |> 
  bind_rows(quartiles) |> 
  ggplot(aes(day, cum_precip, group = year, colour = year_groups,
      linewidth = year_groups)) +
  geom_line() +
  scale_y_c() +
  scale_colour_manual(values = 
    c(pulse$teal, pulse$purple, pulse$pink, pulse$grey_50)) +
  scale_linewidth_manual(values = c(0.7, 0.7, 0.6, 0.2)) +
  labs(
    x = "Day of year", 
    y = "Year to date rainfall", 
    colour = NULL,
    title = "Cummulative annual rainfall for Sydney",
    subtitle = glue(
      "{min(cum_annual_rainfall$year)}-{max(cum_annual_rainfall$year)}"
    )
  ) +
  guides(linewidth = "none")

```

```{r}
#| label: fig-annual-rainfall
#| fig-cap: Annual rainfall for Sydney

cum_annual_rainfall |> 
  filter(day == max(day)) |> 
  ggplot(aes(year, cum_precip, fill = year_groups)) +
  geom_col() +
  geom_smooth(method = "lm", se = FALSE, formula = y ~ x, 
    colour = pulse$secondary) +
  scale_x_continuous(breaks = seq(1990, 2030, by = 5)) +
  scale_y_c() +
  scale_fill_manual(values = 
    c(pulse$teal, pulse$purple, pulse$pink, pulse$grey_50)) +
  guides(fill = "none") +
  labs(
    x = "Year",
    y = "Annual rainfall",
    title = "Annual rainfall has been increasing",
    subtitle = "Trend of annual rainfall for Sydney"
  )

```

```{r}
#| label: fig-rainfall-dist-trend
#| fig-cap: Distribution of precipitation per day in Sydney

cum_annual_rainfall |>
  mutate(
    precip_band = case_when(
      precipitation_mm == 0 ~ "0",
      precipitation_mm <= 1 ~ "<= 1mm",
      precipitation_mm <= 2 ~ "1-2mm",
      precipitation_mm <= 5 ~ "2-5mm",
      precipitation_mm <= 10 ~ "5-10mm",
      precipitation_mm <= 20 ~ "10-20mm",
      TRUE ~ ">20mm"
    ) |> 
      fct_reorder(-precipitation_mm)
  ) |> 
  count(year, precip_band) |> 
  filter(! sum(n) < 365) |> 
  group_by(year) |> 
  mutate(pct = n / sum(n)) |> 
  ggplot(aes(year, pct, fill = precip_band)) +
  geom_col() +
  geom_hline(yintercept = (1:10) * 0.1, colour = pulse$light, linewidth = 0.15) +
  scale_x_continuous(breaks = seq(1990, 2030, by = 5)) +
  scale_y_c(label = percent, breaks = (1:10) * 0.1) +
  scale_fill_manual(values = pulse$primary_gradient(7)) +
  labs(
    x = "Year",
    y = "% of days",
    fill = "Precipitation",
    title = "The percent of days with no rain is declining",
    subtitle = "Distribution of precipitation per day in Sydney over time"
  )

ggsave("images/tt-2025-05-20-precipitation-days.png", width = 5, height = 3.5)

```

## Water quality


```{r}
#| label: fig-leaflet-best-worst-2025
#| fig-cap: Map of worst Enterococci bacteria level in 2025 by swim site

library(leaflet, quietly = TRUE)
library(gt, quietly = TRUE)

water_quality <- tt$water_quality |> 
  filter(year(date) == max(year(date))) |> 
  filter(! is.na(enterococci_cfu_100ml)) |> 
  group_by(region, council, swim_site, latitude, longitude) |> 
  summarise(
    n = n(),
    best  = min(enterococci_cfu_100ml), 
    worst = max(enterococci_cfu_100ml)
  ) |> 
  ungroup() |> 
  mutate(
    worst_colour = case_when(
      worst > 2500 ~ pulse$primary_gradient(7)[7],
      worst > 1000 ~ pulse$primary_gradient(7)[6],
      worst >  500 ~ pulse$primary_gradient(7)[5],
      worst >  250 ~ pulse$primary_gradient(7)[4],
      worst >  100 ~ pulse$primary_gradient(7)[3],
      worst >   50 ~ pulse$primary_gradient(7)[2],
      TRUE ~ pulse$primary_gradient(7)[1]
    ),
    label = glue("
    <strong>{swim_site}</strong><br>
    {council}<br>
    Number of readings {n}<br>
    Worst Enterococci bacteria level: {worst}<br>
    Best Enterococci bacteria level: {best}<br>
    ") |> 
      map(html)
  ) 

water_quality |> 
  leaflet() |> 
  addProviderTiles(providers$Esri.WorldGrayCanvas) |> 
  setView(151.2007, -33.87129, zoom = 12) |> 
  addCircleMarkers(
    stroke = FALSE,
    color = ~worst_colour,
    fillOpacity = 0.8,
    label = ~label
  )





```

